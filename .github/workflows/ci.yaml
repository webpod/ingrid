# This is a Github Workflow that runs tests on any push or pull request.
# If the tests pass and this is a push to the master branch it also runs Semantic Release.
name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 24.x
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            target
            package.json
          retention-days: 1
  push:
    needs: build
    name: Push ${{ github.ref }}
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      checks: read
      statuses: write
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.ref == 'refs/heads/main' && '0' || '1' }}

      - uses: actions/download-artifact@v4
        with:
          name: build

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: Fetch deps
        run: npm ci

      - name: Run tests
        run: npm run test

#      - name: Codeclimate
#        if: github.ref == 'refs/heads/main'
#        uses: paambaati/codeclimate-action@v4.0.0
#        env:
#          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
#        with:
#          coverageLocations: |
#            ${{github.workspace}}/target/coverage/lcov.info:lcov

#      - name: Semantic Release
#        if: github.ref == 'refs/heads/main'
#        env:
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#          NPM_PROVENANCE: true
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GIT_BRANCH: 'main'
#          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
#          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
#          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
#          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
#        run: npm_config_yes=true npx zx-semrel

  pr:
    needs: build
    if: github.event_name == 'pull_request'
    name: PR (Node v${{ matrix.node-version }}, OS ${{ matrix.os }})
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        node-version: [ 24 ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Fetch deps
        run: npm ci

      - uses: actions/download-artifact@v4
        with:
          name: build

      - name: Run tests
        run: npm run test
